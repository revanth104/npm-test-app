name: "Publish npm and GitHub Packages"

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org

      - name: Change to serverless/apps directory
        run: cd serverless/apps

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
  test:
    needs: check-if-published
    if: ${{ needs.check-if-published.outputs.NOT_PUBLISHED == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Enable corepack
        run: corepack enable
        shell: bash
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - run: pnpm install
      - run: pnpm run test
  publish-gpr:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - name: Enable corepack
        run: corepack enable
        shell: bash
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - run: |
          echo "//npm.pkg.github.com/:_authToken=${{ env.NODE_AUTH_TOKEN }}">.npmrc
          echo "@revanth104:registry=https://npm.pkg.github.com">>.npmrc
          pnpm install
          pnpm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
